<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="n1ql-auditing">
    <title>N1QL Auditing</title>
    <shortdesc>Auditing of various N1QL-related user activities.</shortdesc>
    <body>
        <p><i>(Introduced in Couchbase Server 5.5 - Enterprise Edition only)</i></p>
        <p/>
        <section id="section_ycp_mfg_wcb">
            <title>Purpose</title>
            <p>This feature provides asynchronous auditing functionality for various N1QL-related
                user activities, such as:<ul id="ul_q1p_wfg_wcb">
                    <li>authenticating</li>
                    <li>starting and stopping query services</li>
                    <li>executing N1QL statements</li>
                    <li>editing query-engine settings</li>
                    <li>non-query API requests</li>
                </ul>The various N1QL-related user activities are logged whether they are executed
                by a person or by an application that runs queries on behalf of its end-users. When
                an application is running, it's the application that is audited; so for auditing
                those end-users, the applications themselves must contain their own end-user
                auditing.</p>
            <p>N1QL auditing is at the level of requests, not operations. For example, when a
                request arrives with a SELECT query, that query will cause many reads from the index
                engine and KV engine, but those subsidiary operations are not logged, and only the
                original SELECT request is logged. </p>
        </section>
        <section id="section_sph_dgg_wcb">
            <title>Audit UI</title>
            <p>The Audit UI contains N1QL Auditing settings and corresponding REST interfaces which
                are accessible only by the Full Administrator.</p>
            <p>The N1QL auditing page is located on the <b>Security</b> page after clicking on the
                    <b>Audit</b> header.</p>
            <p>With asynchronous auditing, there is a 9-17% degradation in queries/second
                throughput, depending on query size and amount of auditing. The larger the queries
                and less intensive auditing, the less impact there is on query performance.</p>
            <p>To toggle auditing on/off, select or deselect the <b>Audit events</b> checkbox.</p>
            <p>&lt;pic1></p>
            <p>To see the details of the <b>N1QL Events</b>, click the black arrow in front of it to
                see:</p>
            <p>&lt;pic2></p>
            <p>N1QL statements issued through SDK, Query workbench, and Query Shell are captured in
                the N1QL statement audit files.</p>
        </section>
        <section id="section_vsh_4gg_wcb"><title>Audit Log Format</title><p>The audit records are
                written in JSON format to match the format used for Admin Auditing to allow easy
                integration with downstream auditing tools for audit log analysis. The syslog format
                will allow for integration with third party SIEM tools, such as
                QRadar.</p><p>Required auditing fields for executed statements: <table frame="all"
                    rowsep="1" colsep="1" id="table_cmb_sgg_wcb">
                    <tgroup cols="3" align="left">
                        <colspec colname="c1" colnum="1" colwidth="1.0"/>
                        <colspec colname="c2" colnum="2" colwidth="500"/>
                        <colspec colname="c3" colnum="3" colwidth="500"/>
                        <thead>
                            <row>
                                <entry>Field</entry>
                                <entry>Description</entry>
                                <entry>Example</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><codeph><b>timestamp</b></codeph></entry>
                                <entry>Exact date and time of the access event in UTC
                                    format.</entry>
                                <entry><codeph>2018-02-09T14:52:35.163-08:00</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>real_userid</b></codeph></entry>
                                <entry>Source/User from basic authentication fields of
                                    request.</entry>
                                <entry><codeph>"source":"local","user":"Administrator"</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>requestId</b></codeph></entry>
                                <entry>UUID of request, generated by the N1QL server.</entry>
                                <entry><codeph>aee53bf0-d009-4015-8a1d-efec74f2cd74</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>statement</b></codeph></entry>
                                <entry>The actual N1QL query that was executed.</entry>
                                <entry><codeph>SELECT * FROM `travel-sample`</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>isAdHoc</b></codeph></entry>
                                <entry><codeph>TRUE</codeph> for statements made
                                            directly.<p><codeph>FALSE</codeph> for prepared
                                        statements.</p></entry>
                                <entry><codeph>TRUE</codeph></entry>
                            </row>
                            <row>
                                <entry morerows="3"><codeph><b>userAgent</b></codeph></entry>
                                <entry morerows="3">To identify the type of user by a combination of
                                    the User-Agent and CB-User-Agent headers in one of the four
                                        formats:<ol id="ol_dx4_yqg_wcb">
                                        <li>CURL request</li>
                                        <li>Query Workbench</li>
                                        <li>CBQ shell</li>
                                        <li>SDK</li>
                                    </ol></entry>
                                <entry>1) <codeph>curl/7.43.0</codeph></entry>
                            </row>
                            <row>
                                <entry>2) <codeph>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5)
                                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100
                                        Safari/537.36 (Couchbase Query Workbench
                                        (5.1.0-1434-enterprise))</codeph></entry>
                            </row>
                            <row>
                                <entry>3) <codeph>Go-http-client/1.1 (CBQ/2.0)</codeph></entry>
                            </row>
                            <row>
                                <entry>4) <codeph>couchbase-java-client/2.5.2 (git: 2.5.2, core:
                                        1.5.2) (Mac OS X/10.11.6 x86_64; Java HotSpot(TM) 64-Bit
                                        Server VM 1.8.0_101-b13)</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>node</b></codeph></entry>
                                <entry>Assigned name (IP address) of the server where the request
                                            ran.<p><codeph>local</codeph> for unclustered
                                    nodes.</p></entry>
                                <entry><codeph>local</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>status</b></codeph></entry>
                                <entry>Status of the request, as <codeph>success</codeph> or
                                        <codeph>failed</codeph> or <codeph>stopped</codeph>.</entry>
                                <entry><codeph>success</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>metrics</b></codeph></entry>
                                <entry>The elapsed time (ms), execution time (ms), result count, and
                                    result size (MB).</entry>
                                <entry><codeph>"elapsedTime":"7.599684ms","executionTime":"7.507755ms","resultCount":0,"resultSize":0</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>id</b></codeph></entry>
                                <entry>Number for the
                                    <?oxy_custom_start type="oxy_content_highlight" color="255,255,0"?>audit
                                    event type<?oxy_custom_end?>.</entry>
                                <entry><codeph>28672</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>name</b></codeph></entry>
                                <entry>The N1QL command or REST API request type.</entry>
                                <entry><codeph>SELECT</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>description</b></codeph></entry>
                                <entry>Description of the event type.</entry>
                                <entry><codeph>A N1QL SELECT statement was executed</codeph></entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table></p>Optional auditing fields for statements:<table frame="all" rowsep="1"
                colsep="1" id="table_i1z_ckg_wcb">
                <tgroup cols="3" align="left">
                    <colspec colname="c1" colnum="1" colwidth="1*"/>
                    <colspec colname="c2" colnum="2" colwidth="2.5*"/>
                    <colspec colname="c3" colnum="3" colwidth="2.5*"/>
                    <thead>
                        <row>
                            <entry>Field</entry>
                            <entry>Description</entry>
                            <entry>Example</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><codeph><b>namedArgs</b></codeph></entry>
                            <entry>Names and values of name arguments.</entry>
                            <entry><codeph>$val </codeph>and<codeph> $user</codeph></entry>
                        </row>
                        <row>
                            <entry><codeph><b>positionalArgs</b></codeph></entry>
                            <entry>Array of values of positional arguments.</entry>
                            <entry><codeph>$1 </codeph>and<codeph> ?</codeph></entry>
                        </row>
                        <row>
                            <entry><codeph><b>clientContextId</b></codeph></entry>
                            <entry>Captured from the <codeph>client_context_id</codeph> parameter of
                                the N1QL query API. <p>May be used to distinguish between
                                    user-generated queries and UI-generated queries from the Query
                                    WorkBench.</p>UI-generated queries have the prefix
                                    <codeph>INTERNAL-</codeph> in this field. <note>The client
                                    context ID has no security guarantees. The parameter can be set
                                    by any user in any request and is not verified in the server, so
                                    it should not be relied upon for security
                                purposes.</note></entry>
                            <entry/>
                        </row>
                        <row>
                            <entry/>
                            <entry/>
                            <entry/>
                        </row>
                        <row>
                            <entry/>
                            <entry/>
                            <entry/>
                        </row>
                        <row>
                            <entry/>
                            <entry/>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </table><p>Required auditing fields for API requests:<table frame="all" rowsep="1"
                    colsep="1" id="table_arb_ykg_wcb">
                    <tgroup cols="3" align="left">
                        <colspec colname="c1" colnum="1" colwidth="1*"/>
                        <colspec colname="c2" colnum="2" colwidth="2.5*"/>
                        <colspec colname="c3" colnum="3" colwidth="2.5*"/>
                        <thead>
                            <row>
                                <entry>Field</entry>
                                <entry>Description</entry>
                                <entry>Example</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><codeph><b>timestamp</b></codeph></entry>
                                <entry>Exact date and time of the access event in UTC
                                    format.</entry>
                                <entry><codeph>2018-02-09T14:52:35.163-08:00</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>real_userid</b></codeph></entry>
                                <entry>Source/User from basic authentication fields of
                                    request.</entry>
                                <entry><codeph>"source":"local","user":"Administrator"</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>httpMethod</b></codeph></entry>
                                <entry>The API method call, either <codeph>GET, PUT, DELETE,
                                        POST</codeph></entry>
                                <entry><codeph>GET</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>httpResultCode</b></codeph></entry>
                                <entry>The number representing the API result.</entry>
                                <entry><codeph>200</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>errorMessage</b></codeph></entry>
                                <entry>If an error occurred, this will contain information on the
                                    error.</entry>
                                <entry><codeph>User does not have credentials to run queries
                                        accessing the system tables.</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>id</b></codeph></entry>
                                <entry>Number for the
                                    <?oxy_custom_start type="oxy_content_highlight" color="255,255,0"?>API
                                    auditing code<?oxy_custom_end?>.</entry>
                                <entry><codeph>28689</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>name</b></codeph></entry>
                                <entry>The API request location.</entry>
                                <entry><codeph>/admin/ping</codeph></entry>
                            </row>
                            <row>
                                <entry><codeph><b>description</b></codeph></entry>
                                <entry>Description of the event type.</entry>
                                <entry><codeph>An HTTP request was made to the API at
                                        /admin/ping.</codeph></entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table></p></section>
        <section id="section_dwh_bmg_wcb"><title>Examples</title><p>To reduce disk usage and improve
                performance, the log files are as compact as possible.</p><p>When viewed through
                Query Workbench, the logs are formatted and indented for easier
                    reading.</p><p><b>Example 1:</b> Execute <codeph>SELECT * FROM orders</codeph>
                via a CURL statement.</p><p>
                <codeblock>{"timestamp":"2018-02-09T14:52:35.163-08:00","real_userid":{"source":"local","user":"Administrator"},"requestId":"aee53bf0-d009-4015-8a1d-efec74f2cd74","statement":"<b>SELECT * FROM orders</b>","isAdHoc":true,"userAgent":"<b>curl/7.43.0</b>","node":"local_node","status":"success","metrics":{"elapsedTime":"7.599684ms","executionTime":"7.507755ms","resultCount":0,"resultSize":0},"id":28672,"name":"SELECT statement","description":"A N1QL SELECT statement was executed”}</codeblock>
                <codeblock>{
  "timestamp":"2018-02-09T14:52:35.163-08:00",
  "real_userid":
    {
      "source":"local",
      "user":"Administrator"
    },
  "requestId":"aee53bf0-d009-4015-8a1d-efec74f2cd74",
  "statement":"<b>SELECT * FROM orders</b>",
  "isAdHoc":true,
  "userAgent":"<b>curl/7.43.0</b>",
  "node":"local_node",
  "status":"success",
  "metrics":
    {
      "elapsedTime":"7.599684ms",
      "executionTime":"7.507755ms",
      "resultCount":0,
      "resultSize":0
    },
  "id":28672,
  "name":"SELECT statement",
  "description":"A N1QL SELECT statement was executed”
}</codeblock>
            </p><b>Example 2:</b> Execute <codeph>DELETE FROM orders WHERE priority = 6</codeph> via
            a CURL statement<p>
                <codeblock>{"timestamp":"2018-02-09T14:52:55.786-08:00","real_userid":{"source":"local","user":"Administrator"},"requestId":"ded68ae3-d964-4d87-b1c2-70cf72041c6b","statement":"DELETE FROM orders WHERE priority = 6","isAdHoc":true,"userAgent":"curl/7.43.0","node":"local_node","status":"success","metrics":{"elapsedTime":"8.884558ms","executionTime":"8.853976ms","resultCount":0,"resultSize":0},"id":28678,"name":"DELETE statement","description":"A N1QL DELETE statement was executed"}</codeblock>
            </p></section>
    </body>
</topic>
